//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Shell.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Shell.Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ShellParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
public interface IShellVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] ShellParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.program_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram_statement([NotNull] ShellParser.Program_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ShellParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.load_namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoad_namespace([NotNull] ShellParser.Load_namespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.namespace_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_declaration([NotNull] ShellParser.Namespace_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.namespaced_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaced_statement([NotNull] ShellParser.Namespaced_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.namespaced_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaced_declaration([NotNull] ShellParser.Namespaced_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.program_shorthand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram_shorthand([NotNull] ShellParser.Program_shorthandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.statement_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement_block([NotNull] ShellParser.Statement_blockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] ShellParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] ShellParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.function_argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_argument([NotNull] ShellParser.Function_argumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.control"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControl([NotNull] ShellParser.ControlContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.control_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControl_if([NotNull] ShellParser.Control_ifContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.if_then"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_then([NotNull] ShellParser.If_thenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.if_then_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_then_else([NotNull] ShellParser.If_then_elseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.control_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControl_for([NotNull] ShellParser.Control_forContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.control_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControl_return([NotNull] ShellParser.Control_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] ShellParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_or([NotNull] ShellParser.Expression_orContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_and([NotNull] ShellParser.Expression_andContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_equality"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_equality([NotNull] ShellParser.Expression_equalityContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_relational"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_relational([NotNull] ShellParser.Expression_relationalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_additive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_additive([NotNull] ShellParser.Expression_additiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_multiplicative"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_multiplicative([NotNull] ShellParser.Expression_multiplicativeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_unary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_unary([NotNull] ShellParser.Expression_unaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.expression_primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_primary([NotNull] ShellParser.Expression_primaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_call([NotNull] ShellParser.Function_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] ShellParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.identifier_namespaced"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier_namespaced([NotNull] ShellParser.Identifier_namespacedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue([NotNull] ShellParser.ValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] ShellParser.BoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray([NotNull] ShellParser.ArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPair([NotNull] ShellParser.PairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.object"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitObject([NotNull] ShellParser.ObjectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.argument_type_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_type_specifier([NotNull] ShellParser.Argument_type_specifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShellParser.value_type_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue_type_specifier([NotNull] ShellParser.Value_type_specifierContext context);
}
} // namespace Shell.Generated
